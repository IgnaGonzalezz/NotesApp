{"ast":null,"code":"var _jsxFileName = \"/home/ignacio/Escritorio/mi-ejercicio/frontend/src/components/CategoriesManager.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getCategories, createCategory, deleteCategory } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction normalizeCategories(arr) {\n  return (arr || []).map(c => ({\n    ...c,\n    // normaliza distintos posibles nombres de campo que pueda devolver el backend\n    name: c.Name\n  }));\n}\nexport default function CategoriesManager({\n  onCategoriesUpdate\n}) {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [newCategory, setNewCategory] = useState(\"\");\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  async function fetchCategories() {\n    try {\n      const data = await getCategories();\n      console.log(\"raw categories from API:\", data); // útil para debug\n      const normalized = normalizeCategories(data);\n      setCategories(normalized);\n      if (onCategoriesUpdate) onCategoriesUpdate(normalized);\n    } catch (error) {\n      console.error(\"Failed to fetch categories:\", error);\n    }\n  }\n  async function handleCreateCategory() {\n    if (!newCategory) return;\n    try {\n      await createCategory({\n        name: newCategory\n      }); // asume que el endpoint acepta { name }\n      setNewCategory(\"\");\n      fetchCategories();\n    } catch (error) {\n      console.error(\"Failed to create category:\", error);\n    }\n  }\n  async function handleDelete(id) {\n    try {\n      await deleteCategory(id);\n      fetchCategories();\n    } catch (error) {\n      console.error(\"Failed to delete category:\", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"New category\",\n      value: newCategory,\n      onChange: e => setNewCategory(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateCategory,\n      children: \"Add Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: categories.map(c => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: c.Name\n      }, c.ID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(CategoriesManager, \"whqEz8bYNk5L4TStrjeZTOoJV98=\");\n_c = CategoriesManager;\nvar _c;\n$RefreshReg$(_c, \"CategoriesManager\");","map":{"version":3,"names":["React","useEffect","useState","getCategories","createCategory","deleteCategory","jsxDEV","_jsxDEV","normalizeCategories","arr","map","c","name","Name","CategoriesManager","onCategoriesUpdate","_s","categories","setCategories","newCategory","setNewCategory","fetchCategories","data","console","log","normalized","error","handleCreateCategory","handleDelete","id","style","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","ID","_c","$RefreshReg$"],"sources":["/home/ignacio/Escritorio/mi-ejercicio/frontend/src/components/CategoriesManager.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getCategories, createCategory, deleteCategory } from \"../services/api\";\n\nfunction normalizeCategories(arr) {\n  return (arr || []).map(c => ({\n    ...c,\n    // normaliza distintos posibles nombres de campo que pueda devolver el backend\n    name: c.Name \n  }));\n}\n\nexport default function CategoriesManager({ onCategoriesUpdate }) {\n  const [categories, setCategories] = useState([]);\n  const [newCategory, setNewCategory] = useState(\"\");\n\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n\n  async function fetchCategories() {\n    try {\n      const data = await getCategories();\n      console.log(\"raw categories from API:\", data); // útil para debug\n      const normalized = normalizeCategories(data);\n      setCategories(normalized);\n      if (onCategoriesUpdate) onCategoriesUpdate(normalized);\n    } catch (error) {\n      console.error(\"Failed to fetch categories:\", error);\n    }\n  }\n\n  async function handleCreateCategory() {\n    if (!newCategory) return;\n    try {\n      await createCategory({ name: newCategory }); // asume que el endpoint acepta { name }\n      setNewCategory(\"\");\n      fetchCategories();\n    } catch (error) {\n      console.error(\"Failed to create category:\", error);\n    }\n  }\n\n  async function handleDelete(id) {\n    try {\n      await deleteCategory(id);\n      fetchCategories();\n    } catch (error) {\n      console.error(\"Failed to delete category:\", error);\n    }\n  }\n\n  return (\n    <div style={{ marginBottom: \"20px\" }}>\n      <h2>Categories</h2>\n      <input\n        type=\"text\"\n        placeholder=\"New category\"\n        value={newCategory}\n        onChange={(e) => setNewCategory(e.target.value)}\n      />\n      <button onClick={handleCreateCategory}>Add Category</button>\n\n      <ul>\n        {categories.map((c) => (\n          <li key={c.ID}>{c.Name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}