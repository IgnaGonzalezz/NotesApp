{"ast":null,"code":"var _jsxFileName = \"/home/ignacio/Escritorio/mi-ejercicio/frontend/src/components/NotesList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getNotes, toggleArchive, deleteNote, createNote, getArchivedNotes, updateNote, getCategories, createCategory, assignCategory, removeCategory, getNotesByCategory } from \"../services/api\";\nimport NoteCard from \"./NoteCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NotesList() {\n  _s();\n  const [notes, setNotes] = useState([]); // Estado para holdear notas\n  const [loading, setLoading] = useState(true); // Estado para mostrar la carga\n  const [categories, setCategories] = useState([]);\n\n  // Fetch de notas del backend cuando se monta el componente\n  useEffect(() => {\n    async function fetchNotes() {\n      try {\n        const data = await getNotes();\n        setNotes(data);\n      } catch (error) {\n        console.error(\"Error fetching notes:\", error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchNotes();\n  }, []);\n\n  //Fetch de categorias del backend cuando se monta el componente\n  useEffect(() => {\n    async function fetchCategories() {\n      try {\n        const data = await getCategories(); // Función que debemos definir en api.js\n        setCategories(data);\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n      }\n    }\n    fetchCategories();\n  }, []);\n\n  // Función para crear nota simple\n  const handleCreateNote = async () => {\n    const title = prompt(\"Enter note title:\");\n    const content = prompt(\"Enter note content:\");\n    if (!title || !content) return;\n    try {\n      const newNote = await createNote({\n        Title: title,\n        Content: content\n      });\n      setNotes([...notes, newNote]);\n    } catch (error) {\n      console.error(\"Failed to create note:\", error);\n    }\n  };\n\n  // Archivar o Desarchivar nota\n  const handleToggleArchive = async id => {\n    try {\n      const updatedNote = await toggleArchive(id);\n      setNotes(notes.map(n => n.ID === updatedNote.ID ? updatedNote : n));\n    } catch (error) {\n      console.error(\"Failed to toggle archive:\", error);\n    }\n  };\n\n  // Borrar nota\n  const handleDelete = async id => {\n    try {\n      await deleteNote(id);\n      setNotes(notes.filter(n => n.ID !== id));\n    } catch (error) {\n      console.error(\"Failed to delete note:\", error);\n    }\n  };\n\n  // Editar (simplificada, después podemos agregar formulario)\n  function handleEdit(note) {\n    alert(\"Edit feature coming soon: \" + note.Title);\n  }\n\n  // Asignar categoria\n  const handleAssignCategory = async (noteId, categoryId) => {\n    try {\n      const updatedNote = await assignCategory(noteId, categoryId); // función en api.js\n      setNotes(notes.map(n => n.ID === updatedNote.ID ? updatedNote : n));\n    } catch (error) {\n      console.error(\"Failed to assign category:\", error);\n    }\n  };\n\n  // Remover categoria\n  const handleRemoveCategory = async noteId => {\n    try {\n      const updatedNote = await removeCategory(noteId); // función en api.js\n      setNotes(notes.map(n => n.ID === updatedNote.ID ? updatedNote : n));\n    } catch (error) {\n      console.error(\"Failed to remove category:\", error);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading notes...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateNote,\n      style: {\n        marginBottom: \"15px\"\n      },\n      children: \"Create Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this), notes.map(note => /*#__PURE__*/_jsxDEV(NoteCard, {\n      note: note,\n      onArchive: handleToggleArchive,\n      onDelete: handleDelete,\n      onEdit: handleEdit,\n      onAssignCategory: handleAssignCategory // nueva función\n      ,\n      onRemoveCategory: handleRemoveCategory // nueva función\n      ,\n      categories: categories // <- esto es lo que faltaba\n    }, note.ID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 3\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 3\n  }, this);\n}\n_s(NotesList, \"9r7B7v8UgVY9XHxXXoAwrCwQb24=\");\n_c = NotesList;\nexport default NotesList;\nvar _c;\n$RefreshReg$(_c, \"NotesList\");","map":{"version":3,"names":["React","useEffect","useState","getNotes","toggleArchive","deleteNote","createNote","getArchivedNotes","updateNote","getCategories","createCategory","assignCategory","removeCategory","getNotesByCategory","NoteCard","jsxDEV","_jsxDEV","NotesList","_s","notes","setNotes","loading","setLoading","categories","setCategories","fetchNotes","data","error","console","fetchCategories","handleCreateNote","title","prompt","content","newNote","Title","Content","handleToggleArchive","id","updatedNote","map","n","ID","handleDelete","filter","handleEdit","note","alert","handleAssignCategory","noteId","categoryId","handleRemoveCategory","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","marginBottom","onArchive","onDelete","onEdit","onAssignCategory","onRemoveCategory","_c","$RefreshReg$"],"sources":["/home/ignacio/Escritorio/mi-ejercicio/frontend/src/components/NotesList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  getNotes,\n  toggleArchive,\n  deleteNote,\n  createNote,\n  getArchivedNotes,\n  updateNote,\n  getCategories,\n  createCategory,\n  assignCategory,\n  removeCategory,\n  getNotesByCategory\n} from \"../services/api\";\nimport NoteCard from \"./NoteCard\";\n\nfunction NotesList() {\n  const [notes, setNotes] = useState([]); // Estado para holdear notas\n  const [loading, setLoading] = useState(true); // Estado para mostrar la carga\n  const [categories, setCategories] = useState([]);\n\n  // Fetch de notas del backend cuando se monta el componente\n  useEffect(() => {\n  async function fetchNotes() {\n    try {\n      const data = await getNotes();\n      setNotes(data);\n    } catch (error) {\n      console.error(\"Error fetching notes:\", error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  fetchNotes();\n}, []);\n\n//Fetch de categorias del backend cuando se monta el componente\nuseEffect(() => {\n  async function fetchCategories() {\n    try {\n      const data = await getCategories(); // Función que debemos definir en api.js\n      setCategories(data);\n    } catch (error) {\n      console.error(\"Error fetching categories:\", error);\n    }\n  }\n\n  fetchCategories();\n}, []);\n\n  // Función para crear nota simple\n  const handleCreateNote = async () => {\n    const title = prompt(\"Enter note title:\");\n    const content = prompt(\"Enter note content:\");\n    if (!title || !content) return;\n    try {\n      const newNote = await createNote({ Title: title, Content: content });\n      setNotes([...notes, newNote]);\n    } catch (error) {\n      console.error(\"Failed to create note:\", error);\n    }\n  };\n\n\n  // Archivar o Desarchivar nota\n  const handleToggleArchive = async (id) => {\n    try {\n      const updatedNote = await toggleArchive(id);\n      setNotes(notes.map(n => (n.ID === updatedNote.ID ? updatedNote : n)));\n    } catch (error) {\n      console.error(\"Failed to toggle archive:\", error);\n    }\n  };\n\n  // Borrar nota\n  const handleDelete = async (id) => {\n    try {\n      await deleteNote(id);\n      setNotes(notes.filter(n => n.ID !== id));\n    } catch (error) {\n      console.error(\"Failed to delete note:\", error);\n    }\n  };\n\n  // Editar (simplificada, después podemos agregar formulario)\n  function handleEdit(note) {\n  alert(\"Edit feature coming soon: \" + note.Title);\n  }\n\n  // Asignar categoria\n  const handleAssignCategory = async (noteId, categoryId) => {\n  try {\n    const updatedNote = await assignCategory(noteId, categoryId); // función en api.js\n    setNotes(notes.map(n => n.ID === updatedNote.ID ? updatedNote : n));\n  } catch (error) {\n    console.error(\"Failed to assign category:\", error);\n  }\n};\n\n// Remover categoria\nconst handleRemoveCategory = async (noteId) => {\n  try {\n    const updatedNote = await removeCategory(noteId); // función en api.js\n    setNotes(notes.map(n => n.ID === updatedNote.ID ? updatedNote : n));\n  } catch (error) {\n    console.error(\"Failed to remove category:\", error);\n  }\n};\n\n\n  if (loading) return <p>Loading notes...</p>;\n\n  return (\n  <div>\n    <button onClick={handleCreateNote} style={{ marginBottom: \"15px\" }}>\n    Create Note\n    </button>\n    <h1>Notes</h1>\n    {notes.map(note => (\n  <NoteCard\n    key={note.ID}\n    note={note}\n    onArchive={handleToggleArchive}\n    onDelete={handleDelete}\n    onEdit={handleEdit}\n    onAssignCategory={handleAssignCategory} // nueva función\n    onRemoveCategory={handleRemoveCategory} // nueva función\n    categories={categories} // <- esto es lo que faltaba\n  />\n))}\n\n  </div>\n);\n}\n\nexport default NotesList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}